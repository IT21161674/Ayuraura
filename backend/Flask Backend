# Import required libraries
from flask import Flask, request, jsonify
from flask_cors import CORS
import joblib
import numpy as np

# Load the trained model and scaler
model_path = 'stress_probability_model.pkl' 
scaler_path = 'scaler.pkl' 

loaded_model = joblib.load(model_path)
loaded_scaler = joblib.load(scaler_path)

# Initialize Flask app
app = Flask(__name__)
CORS(app)  # Enable CORS for all routes

# Define prediction endpoint
@app.route('/predict', methods=['POST'])
def predict():
    try:
        # Parse JSON input
        data = request.json
        sample_input = np.array([[
            data['avg_sleep_hours_per_night'],
            data['avg_exercise_days_per_week'],
            data['avg_work_or_study_hours_per_week'],
            data['avg_screen_hours_per_day'],
            data['social_interaction_quality_rating'],
            data['diet_healthiness_rating'],
            data['smoking_drinking_habits_rating'],
            data['avg_recreational_hours_per_week']
        ]])

        # Scale input data
        scaled_input = loaded_scaler.transform(sample_input)

        # Make predictions
        predicted_class = loaded_model.predict(scaled_input)[0]
        predicted_probabilities = loaded_model.predict_proba(scaled_input)[0]

        # Prepare response
        response = {
            "predicted_class": "Stress" if predicted_class == 1 else "No Stress",
            "probabilities": {
                "No Stress": f"{predicted_probabilities[0] * 100:.2f}%",
                "Stress": f"{predicted_probabilities[1] * 100:.2f}%"
            }
        }
        return jsonify(response)
    except Exception as e:
        return jsonify({"error": str(e)})

# Start Flask app
if __name__ == '__main__':
    # Run Flask app locally
    app.run(host='127.0.0.1', port=5000, debug=True)
